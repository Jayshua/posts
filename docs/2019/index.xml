<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2019s on ARoW blog</title>
    <link>https://arow.info/posts/2019/</link>
    <description>Recent content in 2019s on ARoW blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 Apr 2019 16:06:39 +0900</lastBuildDate>
    
	<atom:link href="https://arow.info/posts/2019/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Form Decoding: the next era of the Form Validation</title>
      <link>https://arow.info/posts/2019/form-decoding/</link>
      <pubDate>Fri, 26 Apr 2019 16:06:39 +0900</pubDate>
      
      <guid>https://arow.info/posts/2019/form-decoding/</guid>
      <description>Form validation, verifying the user inputs, is common in GUI applications. But when it comes to be the context of statically typed programming, the form validation is not enough.
In these days, some application developers like to use statically typed programming languages in order to make their application more reliable. So, in this post I introduce new concept named form decoding, a sort of form validation especially suitable for statically typed programming, and demonstrate how it could be make your applications better by using elm-form-decoder, which I&amp;rsquo;ve developed to do form decoding in Elm applications.</description>
    </item>
    
  </channel>
</rss>